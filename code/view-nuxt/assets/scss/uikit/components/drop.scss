// Name:            Drop
// Description:     Component to position any element next to any other element.
//
// Component:       `dxt-drop`
//
// Modifiers:       `dxt-drop-top-*`
//                  `dxt-drop-bottom-*`
//                  `dxt-drop-left-*`
//                  `dxt-drop-right-*`
//                  `dxt-drop-stack`
//                  `dxt-drop-grid`
//
// States:          `dxt-open`
//
// Uses:            Animation
//
// ========================================================================


// Variables
// ========================================================================

$drop-z-index:                               $global-z-index + 20 !default;
$drop-width:                                 300px !default;
$drop-margin:                                $global-margin !default;


/* ========================================================================
   Component: Drop
 ========================================================================== */

/*
 * 1. Hide by default
 * 2. Set position
 * 3. Set a default width
 */

.dxt-drop {
    /* 1 */
    display: none;
    /* 2 */
    position: absolute;
    z-index: $drop-z-index;
    /* 3 */
    box-sizing: border-box;
    width: $drop-width;
}

/* Show */
.dxt-drop.dxt-open { display: block; }


/* Direction / Alignment modifiers
 ========================================================================== */

/* Direction */
[class*='dxt-drop-top'] { margin-top: (-$drop-margin); }
[class*='dxt-drop-bottom'] { margin-top: $drop-margin; }
[class*='dxt-drop-left'] { margin-left: (-$drop-margin); }
[class*='dxt-drop-right'] { margin-left: $drop-margin; }


/* Grid modifiers
 ========================================================================== */

.dxt-drop-stack .dxt-drop-grid > * { width: 100% !important; }


// Hooks
// ========================================================================

@if(mixin-exists(hook-drop-misc)) {@include hook-drop-misc();}

// @mixin hook-drop-misc(){}
